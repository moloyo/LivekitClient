# Source: livekit-server/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-livekit-server
data:
  config.yaml: |
    keys:
      KEY_NAME: KEY_VALUE
    log_level: info
    port: 7880
    redis:
      address: REDIS_SERVER_URL_AND_PORT
      password: REDIS_SERVER_PASSWORD
      user: REDIS_SERVER_USER
      db: 0
    rtc:
      port_range_end: 60000
      port_range_start: 50000
      tcp_port: 7881
      use_external_ip: true
    turn:
      domain: turn.joaquingarcia.ar
      enabled: false
      loadBalancerAnnotations: {}
      secretName: turn
      tls_port: 5349
      udp_port: 3478
---
# Source: livekit-server/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-livekit-server
  labels:
    helm.sh/chart: livekit-server-1.4.4
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.4.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
---
# Source: livekit-server/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-livekit-server
  labels:
    helm.sh/chart: livekit-server-1.4.4
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.4.4"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: livekit-server
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      annotations:
        linkerd.io/inject: disabled
        sidecar.istio.io/inject: "false"
        checksum/config: 6ce8920b83899ab961fbadf9c1261c57b73d821b92caa01aa3c9a54bc734342f
      labels:
        app.kubernetes.io/name: livekit-server
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: default
      securityContext:
        {}
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      terminationGracePeriodSeconds: 18000
      containers:
        - name: livekit-server
          securityContext:
            {}
          image: "livekit/livekit-server:v1.4.4"
          imagePullPolicy: IfNotPresent
          args: ["--disable-strict-config"]
          env:
            - name: LIVEKIT_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: release-name-livekit-server
                  key: config.yaml
          ports:
            - name: http
              containerPort: 7880
              protocol: TCP
            - name: rtc-tcp
              containerPort: 7881
              hostPort: 7881
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 120
            periodSeconds: 30
          resources:
            limits:
              cpu: 2000m
              memory: 2048Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
---
# Source: livekit-server/templates/hpa.yaml
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-livekit-server
  labels:
    helm.sh/chart: livekit-server-1.4.4
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.4.4"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: release-name-livekit-server
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
---
# Source: livekit-server/templates/ingress.yaml
kind: Ingress
metadata:
  name: release-name-livekit-server
  labels:
    helm.sh/chart: livekit-server-1.4.4
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.4.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
  # custom annotations
  # AWS ALB
  # GKE with managed certs
  # DO with cert manager
    cert-manager.io/cluster-issuer: letsencrypt
apiVersion: networking.k8s.io/v1
spec:
  ingressClassName: nginx
  rules:
  # In order to work with cert manager on DO, we cannot set us as a default backend
  - host: "joaquingarcia.ar"
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: release-name-livekit-server
            port:
              number: 80
  tls:
    - hosts:
        - "joaquingarcia.ar"
      secretName: "tls-secret-ingress-euge"
---
# Source: livekit-server/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "release-name-livekit-server-test-connection"
  labels:
    helm.sh/chart: livekit-server-1.4.4
    app.kubernetes.io/name: livekit-server
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.4.4"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['release-name-livekit-server:80']
  restartPolicy: Never
